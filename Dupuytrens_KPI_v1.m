% -------------------------------------------------------------------------
% This script is designed to query Dupuytrens data for Dr. Eaton, whose
% request is "Is there an automated way for me to see how many new 
% enrollees there have been during each phase? To develop my enrollment 
% and follow-up outreach efforts, I want to track the number of new 
% enrollees and phase participants in real time to track how well my 
% own outreach efforts are.". 01/07/2025
% -------------------------------------------------------------------------

try
    dbConnection = database('FORWARD', 'matt', 'ardent-refurbished-knit');
catch ME
    if strcmp(ME.identifier, 'database:database:dataSourceNameNotFound')
        error('dataSourceNameNotFound. To fix, launch PowerShell as admin, execute the following code, then rerun this script:\nAdd-OdbcDsn -Name ''%s'' -DriverName ''SQL Server'' -DsnType ''System'' -Platform ''64-bit'' -SetPropertyValue ''Server=10.0.100.70''', 'FORWARD')
    else
        rethrow(ME);
    end
    dbsource = "powershell;Add-OdbcDsn -Name 'FORWARD' -DriverName 'SQL Server' -DsnType 'System' -Platform '64-bit' -SetPropertyValue 'Server=10.0.100.70'";
    system(dbsource);
end
try
    queryIndex = 1;
    % --- Define queries ---
    % - Enrollment Questionnaires -
    % Enrollment: Total Started this Week - This is the total number of people who have started a Dupuytren Enrollment questionnaire this week
    queryList{queryIndex}.title = 'Enrollment: Total Started this Week';
    queryList{queryIndex}.description = 'This is the total number of people who have started a Dupuytren Enrollment questionnaire this week';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name = ''Dupuytrens Enrollment'' -- must be enrolled in Dupuytrens --' ...
                                    '        AND DATEDIFF(day, up.ActivityDate, GETDATE()) <= 7 -- must have occured in the last week --'];
    queryIndex = queryIndex + 1;

    % Enrollment: Total Completed this Week - Same as the above, but for a Completed status
    queryList{queryIndex}.title = 'Enrollment: Total Completed this Week';
    queryList{queryIndex}.description = 'This is the total number of people who have completed a Dupuytren Enrollment questionnaire this week';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name = ''Dupuytrens Enrollment'' -- must be enrolled in Dupuytrens --' ...
                                    '        AND s.IsComplete = 1 -- must have a status of complete --' ...
                                    '        AND DATEDIFF(day, up.ActivityDate, GETDATE()) <= 7 -- must have occured in the last week --'];
    queryIndex = queryIndex + 1;

    % Enrollment: Total Started Ever - We are looking for the total number of people who have a Dupuytren Diagnosis and have ever started a Dupuytren Enrollment
    queryList{queryIndex}.title = 'Enrollment: Total Started Ever';
    queryList{queryIndex}.description = 'The total number of people who have a Dupuytren Diagnosis and have ever started a Dupuytren Enrollment';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name = ''Dupuytrens Enrollment'' -- must be enrolled in Dupuytrens --'];
    queryIndex = queryIndex + 1;

    % Enrollment: Total Completed Ever - Same as the above, but for a Completed status
    queryList{queryIndex}.title = 'Enrollment: Total Completed Ever';
    queryList{queryIndex}.description = 'The total number of people who have a Dupuytren Diagnosis and have ever completed a Dupuytren Enrollment';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name = ''Dupuytrens Enrollment'' -- must be enrolled in Dupuytrens --' ...
                                    '        AND s.IsComplete = 1 -- must have a status of complete --'];    
    queryIndex = queryIndex + 1;

    % - Long Questionnaires -
    % Long Questionnaire: Current Phase Questionnaires Sent - This is the total number of phase questionnaires that have been sent out to Dupuytren participants this phase
    queryList{queryIndex}.title = 'Long Questionnaire: Current Phase Questionnaires Sent';
    queryList{queryIndex}.description = 'This is the total number of long phase questionnaires that have been sent out to Dupuytren participants this phase';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.SentStatus IN (60, 560) -- confirm that the sent status is ''sent'' --'];    
    queryIndex = queryIndex + 1;

    % Long Questionnaire: Current Phase Questionnaires Started - This is the total number of phase questionnaires that have been started by Dupuytren participants this phase
    queryList{queryIndex}.title = 'Long Questionnaire: Current Phase Questionnaires Started';
    queryList{queryIndex}.description = 'This is the total number of long phase questionnaires that have been started by Dupuytren participants this phase';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.StartedStatus IN (69, 569) -- confirm that the started status is ''started'' --'];    
    queryIndex = queryIndex + 1;

    % Long Questionnaire: Current Phase Questionnaires Completed - This is the total number of phase questionnaires that have been completed by Dupuytren participants this phase
    queryList{queryIndex}.title = 'Long Questionnaire: Current Phase Questionnaires Completed';
    queryList{queryIndex}.description = 'This is the total number of long phase questionnaires that have been completed by Dupuytren participants this phase';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.CompleteStatus IN (63, 563) -- confirm that the complete status is ''complete'' --'];    
    queryIndex = queryIndex + 1;

    % Long Questionnaire: Phase Questionnaires Completed this Week - This is the total number of phase questionnaires that have been completed by Dupuytren participants this week
    queryList{queryIndex}.title = 'Long Questionnaire: Phase Questionnaires Completed this Week';
    queryList{queryIndex}.description = 'This is the total number of long phase questionnaires that have been completed by Dupuytren participants this week';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.CompleteStatus IN (63, 563) -- confirm that the complete status is ''complete'' --' ...
                                    '    AND DATEDIFF(day, up.ActivityDate, GETDATE()) <= 7 -- must have occured in the last week --'];    
    queryIndex = queryIndex + 1;

    % Long Questionnaire: Total Phase Questionnaires Ever Sent - This is the total number of phase questionnaires that have ever been sent out to Dupuytren participants
    queryList{queryIndex}.title = 'Long Questionnaire: Total Phase Questionnaires Ever Sent';
    queryList{queryIndex}.description = 'This is the total number of long phase questionnaires that have ever been sent out to Dupuytren participants';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like ''%Questionnaire (%Dupuytren%'' -- specify the long questionnaire phase name... --' ...
			                        '        AND ph.Name Not Like ''%Questionnaire (%Dupuytren%Short%'' ' ...
		                            '    AND ph.SentStatus IN (60, 560) -- confirm that the sent status is ''sent'' --'];    
    queryIndex = queryIndex + 1;

    % Long Questionnaire: Total Phase Questionnaires Ever Completed - This is the total number of phase questionnaires that have ever been completed by Dupuytren participants
    queryList{queryIndex}.title = 'Long Questionnaire: Total Phase Questionnaires Ever Completed';
    queryList{queryIndex}.description = 'This is the total number of long phase questionnaires that have ever been completed by Dupuytren participants';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like ''%Questionnaire (%Dupuytren%'' -- specify the long questionnaire phase name... --' ...
			                        '        AND ph.Name Not Like ''%Questionnaire (%Dupuytren%Short%'' ' ...
		                            '    AND ph.CompleteStatus IN (63, 563) -- confirm that the complete status is ''complete'' --'];    
    queryIndex = queryIndex + 1;

    % - Short Questionnaires -
    % Short Questionnaire: Current Phase Questionnaires Sent - This is the total number of phase questionnaires that have been sent out to Dupuytren participants this phase
    queryList{queryIndex}.title = 'Short Questionnaire: Current Phase Questionnaires Sent';
    queryList{queryIndex}.description = 'This is the total number of short phase questionnaires that have been sent out to Dupuytren participants this phase';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.SentStatus IN (60, 560) -- confirm that the sent status is ''sent'' --'];    
    queryIndex = queryIndex + 1;

    % Short Questionnaire: Current Phase Questionnaires Started - This is the total number of phase questionnaires that have been started by Dupuytren participants this phase
    queryList{queryIndex}.title = 'Short Questionnaire: Current Phase Questionnaires Started';
    queryList{queryIndex}.description = 'This is the total number of short phase questionnaires that have been started by Dupuytren participants this phase';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.StartedStatus IN (69, 569) -- confirm that the started status is ''started'' --'];    
    queryIndex = queryIndex + 1;

    % Short Questionnaire: Current Phase Questionnaires Completed - This is the total number of phase questionnaires that have been completed by Dupuytren participants this phase
    queryList{queryIndex}.title = 'Short Questionnaire: Current Phase Questionnaires Completed';
    queryList{queryIndex}.description = 'This is the total number of short phase questionnaires that have been completed by Dupuytren participants this phase';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.CompleteStatus IN (63, 563) -- confirm that the complete status is ''complete'' --'];    
    queryIndex = queryIndex + 1;

    % Short Questionnaire: Phase Questionnaires Completed this Week - This is the total number of phase questionnaires that have been completed by Dupuytren participants this week
    queryList{queryIndex}.title = 'Short Questionnaire: Phase Questionnaires Completed this Week';
    queryList{queryIndex}.description = 'This is the total number of short phase questionnaires that have been completed by Dupuytren participants this week';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
                                    '        AND ph.Name Like -- specify the current phase name... --' ...
			                        '        CASE WHEN MONTH(GETDATE()) < 7 THEN -- if the current month is pre-July... --' ...
				                    '            CONCAT(YEAR(GETDATE()), '' January Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''January'' --' ...
			                        '        ELSE ' ... 
				                    '            CONCAT(YEAR(GETDATE()), '' July Questionnaire (Dupuytren Short)'') -- search for a phase name that includes the current year and ''July'' --' ... 
			                        '        END ' ...
		                            '    AND ph.CompleteStatus IN (63, 563) -- confirm that the complete status is ''complete'' --' ...
                                    '    AND DATEDIFF(day, up.ActivityDate, GETDATE()) <= 7 -- must have occured in the last week --'];    
    queryIndex = queryIndex + 1;

    % Short Questionnaire: Total Phase Questionnaires Ever Sent - This is the total number of phase questionnaires that have ever been sent out to Dupuytren participants
    queryList{queryIndex}.title = 'Short Questionnaire: Total Phase Questionnaires Ever Sent';
    queryList{queryIndex}.description = 'This is the total number of short phase questionnaires that have ever been sent out to Dupuytren participants';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
			                        '        AND ph.Name Like ''%Questionnaire (Dupuytren Short)'' -- specify the short questionnaire phase name... --' ...
		                            '    AND ph.SentStatus IN (60, 560) -- confirm that the sent status is ''sent'' --'];    
    queryIndex = queryIndex + 1;

    % Short Questionnaire: Total Phase Questionnaires Ever Completed - This is the total number of phase questionnaires that have ever been completed by Dupuytren participants
    queryList{queryIndex}.title = 'Short Questionnaire: Total Phase Questionnaires Ever Completed';
    queryList{queryIndex}.description = 'This is the total number of short phase questionnaires that have ever been completed by Dupuytren participants';
    queryList{queryIndex}.query = [ 'USE Forward ' ...
                                    'SELECT COUNT(*) as Count ' ...
                                    '    FROM arc.dbo.Natalog n ' ...
                                    '    JOIN UserPhase up ON up.UserId = n.GUID -- match userIDs between Forward.UserPhase and arc.Natalog --' ...
                                    '    JOIN Status s on s.Code = up.StatusCode -- match status codes between Forward.Status and Forward.UserPhase --' ...
                                    '    JOIN Phase ph ON ph.PhaseId = up.PhaseId -- match phase IDs between Forward.Phase and Forward.UserPhase --' ...
                                    '    WHERE diagnosis = ''DUP'' -- must have DUP diagnosis --' ...
			                        '        AND ph.Name Like ''%Questionnaire (Dupuytren Short)'' -- specify the short questionnaire phase name... --' ...
		                            '    AND ph.CompleteStatus IN (63, 563) -- confirm that the complete status is ''complete'' --'];    
    

    % for each query...
    for queryNum = 1:length(queryList)
        % set which database to use
        if (queryNum == 1) || ~strcmp(string(extract(queryList{queryNum}.query, 'USE ' + lettersPattern)), string(extract(queryList{queryNum-1}.query, 'USE ' + lettersPattern)))
            execute(dbConnection, string(extract(queryList{queryNum}.query, 'USE ' + lettersPattern)));
        end
        % run the body of the query, with comments removed (i.e., remove
        % text between -- and --)
        % queryList{queryNum}.data = fetch(dbConnection, string(replace(extractAfter(queryList{queryNum}.query, 'USE ' + lettersPattern + ' '), '--' + wildcardPattern + whitespacePattern(5), '    ')));
        queryList{queryNum}.data = fetch(dbConnection, string(replace(extractAfter(queryList{queryNum}.query, 'USE ' + lettersPattern + ' '), '--' + wildcardPattern + '--', '')));
    end
    close(dbConnection);
catch ME
    close(dbConnection);
    rethrow(ME);
end
%%
% --- Save data to a spreadsheet where the rows correspond to the query and 
% the columns correspond to the date the queries were run ---

% Get a list of files in the current directory to check for 'Dupuytrens Participation Query Results.xlsx'
currentDir = dir(pwd);
if ~any(contains({currentDir.name}, 'Dupuytrens Participation Query Results.xlsx')) % if existing spreadsheet doesn't exist, create one from scratch
    outputData = cell(length(queryList) + 1, 3);
    outputData{1,1} = 'Title';
    outputData{1,2} = 'Description';
    outputData{1,3} = string(datetime('now','Format','yyyy/MM/dd, HH:mm')); % insert current datetime at top of column 3
    for queryNum = 1:length(queryList)
        outputData{queryNum+1, 1} = queryList{queryNum}.title;
        outputData{queryNum+1, 2} = queryList{queryNum}.description;
        outputData{queryNum+1, 3} = table2array(queryList{queryNum}.data);
    end
else % if an existing spreadsheet exists, load it, then append data. 
    % NOTE: Append newest data into column 3, shift old columns to the
    % right
    existingData = readcell('Dupuytrens Participation Query Results.xlsx');
    edHeight = height(existingData);
    edWidth = width(existingData);
    outputData = cell(height(existingData), width(existingData) + 1);
    outputData(:,1:2) = existingData(:,1:2); % paste titles and descriptions from existingData to outputData
    outputData(:,4:end) = existingData(:,3:end); % paste old data from existingData to outputData
    outputData{1,3} = string(datetime('now','Format','yyyy/MM/dd, HH:mm')); % insert current datetime at top of column 3
    for queryNum = 1:length(queryList)
        % check to see if an existing title matches the current query.title
        if any(matches(existingData(:,1), queryList{queryNum}.title))
            outputData{matches(existingData(:,1), queryList{queryNum}.title), 3} = table2array(queryList{queryNum}.data);
        else % if no titles in existing data match the current query.title, create a new row for the current query 
            outputData{edHeight+1, 1} = queryList{queryNum}.title;
            outputData{edHeight+1, 2} = queryList{queryNum}.description;
            outputData{edHeight+1, 3} = table2array(queryList{queryNum}.data);
            edHeight = height(outputData);
        end
    end
end
%%
writecell(outputData, 'Dupuytrens Participation Query Results.xlsx')

    










